<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="js/controllers/GridCtrl.js" application="/workflow/"><![CDATA[
'use strict';

// Grid controller
// dependency injection
function GridCtrl($scope, $window){
  
  // sorting table
  $scope.page.sort = function(property, isUp) {
    $scope.page.predicate = property; 
    $scope.page.isUp = !isUp;
    // change sorting icon
    $scope.page.sortIcon = 'glyphicon glyphicon-chevron-' + ($scope.page.isUp ? 'up':'down') + ' pull-right';    
  };
    
  // selecting row in table
  $scope.page.select = function(item) {
    if ($scope.page.grid.selected) {
      $scope.page.grid.selected.rowCss = '';
        
      if ($scope.page.grid.selected == item) {
        $scope.page.grid.selected = null;
        return;
      }
    }
      
    $scope.page.grid.selected = item;
    // change css class to highlight the row
    $scope.page.grid.selected.rowCss = 'info';
  };

  $scope.page.totalCnt =  function() {
    return $window.document.getElementById('tasksTable').getElementsByTagName('TR').length - 2;
  };
    
  // if AssignedTo matches with current user - return 'true'  
  $scope.page.isAssigned = function(selected) {
    if (selected) {   
      if (selected.AssignedTo == $scope.page.readCookie("User"))
        return true;
    }    
    return false;
  };
  
  // watching for changes in 'Search' input
  // if there is change, reset the selection.  
  $scope.$watch('query', function() {
    if ($scope.page.grid.selected) {
      $scope.page.select($scope.page.grid.selected);  
    }
  });
  
  // sort table after page.init (by Priority, desc)
  // to change sorting column change 'columns[<index>]'
  $scope.page.sort($scope.page.grid.columns[1].property, false);
}

// resolving minification problems
GridCtrl.$inject = ['$scope', '$window'];
controllersModule.controller('GridCtrl', GridCtrl);

]]></CSP>
</Export>
