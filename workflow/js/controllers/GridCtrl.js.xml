<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<CSP name="js/controllers/GridCtrl.js" application="/workflow/"><![CDATA[
'use strict';

// Grid controller
// dependency injection
function GridCtrl( $scope, $window ){
  
  // sorting table
  $scope.page.sort = function( property, isUp ) {
    $scope.page.predicate = property; 
    $scope.page.isUp = !isUp;
    // sorting icon
    $scope.page.sortIcon = 'glyphicon glyphicon-chevron-' + ( $scope.page.isUp ? 'up':'down' ) + ' pull-right';    
  };
    
  // selecting row in table
  $scope.page.select = function( item ) {
    if ( $scope.page.grid.selected ) {
      $scope.page.grid.selected.rowCss = '';
        
      if ( $scope.page.grid.selected == item ) {
        $scope.page.grid.selected = null;
        return;
      }
    }
      
    $scope.page.grid.selected = item;
    // change css class to highlight the row
    $scope.page.grid.selected.rowCss = 'info';
  };

  // Method to get value of any property of the object
  // Example: 
  // var obj = {car: {body: {company: {name: 'Mazda'}}}};
  // getPropertyValue(obj, 'car.body.company.name') 
  $scope.page.getPropertyValue = function( item, propertyStr ) {
    var value = item;

    try {
      var properties = propertyStr.split( '.' );
      for ( var i = 0; i < properties.length; i++ ) {
        value = value[properties[i]];
            
        if ( value !== Object(value) )
          break;
        }
    }
    catch( ex ) {
      console.log( 'Something goes wrong :/' );
    }

    return value == undefined ? '' : value;
  };

  $scope.page.totalCnt =  function() {
    return $window.document.getElementById('tasksTable').getElementsByTagName('TR').length - 2;
  };
    
  $scope.page.assigned =  function( selected ) {
  
    if ( selected ) {
      
      if ( selected.AssignedTo == $scope.page.readCookie("Username") )
        return true;
    }
    
    return false;
  };
    
  $scope.$watch( 'query', function() {
    if ( $scope.page.grid.selected ) {
      $scope.page.select( $scope.grid.selected );  
    }
    $scope.page.grid.selected = 0;
  });
  
  // sort table during init (by Priority, desc)
  // to change column change columns[ index ]
  $scope.page.sort( $scope.page.grid.columns[1].property, false );
}

// resolving minification problems
GridCtrl.$inject = [ '$scope', '$window' ];
controllersModule.controller( 'GridCtrl', GridCtrl );

]]></CSP>
</Export>
